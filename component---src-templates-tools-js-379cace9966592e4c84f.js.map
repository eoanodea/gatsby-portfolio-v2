{"version":3,"sources":["webpack:///./src/templates/Tools.js","webpack:///./src/components/RouteLink.js","webpack:///./src/components/Pagination.js","webpack:///./src/components/Card.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/sections/SubPageLanding.js","webpack:///./src/components/ImageSubtitle.js"],"names":["Background","color","height","width","invertY","invertX","CoverImage","styled","img","Post","fields","frontmatter","div","whileHover","scale","whileTap","to","slug","m","pb","style","fontSize","fontWeight","cursor","mb","title","bg","x","y","round","platform","join","featimg","src","publicURL","alt","description","date","ProjectIndex","data","pageContext","posts","postsResult","edges","allTools","tools","result","map","dat","push","fieldValue","getToolsArrFromQuery","toolsResult","group","console","log","pageHeader","image","pathname","name","scrollTo","loop","Container","id","minWidth","maxWidth","i","node","bottom","key","query","RouteLink","link","selected","disableMargin","icon","ml","tabIndex","onClick","transform","marginLeft","Pagination","previousPagePath","nextPagePath","CardContainer","props","Card","CardRebass","attrs","boxShadow","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","SubLandingPage","Header","label","length","top","cascade","display","flexWrap","text","p","pl","pr","backgroundColor","_","kebabCase","section","BORDER_PATH_MAP","BORDER_RADIUS_MAP","BORDER_RADIUS","ImageSubtitle","Box","propTypes","PropTypes","oneOf","bool","defaultProps"],"mappings":"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","file":"component---src-templates-tools-js-379cace9966592e4c84f.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport styled from \"styled-components\"\nimport Triangle from \"../components/Triangle\"\nimport { Heading, Text } from \"rebass/styled-components\"\n\nimport Fade from \"react-reveal/Fade\"\nimport { CardContainer, Card } from \"../components/Card\"\nimport Section from \"../components/Section\"\nimport ImageSubtitle from \"../components/ImageSubtitle\"\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/SEO\"\nimport Pagination from \"../components/Pagination\"\nimport SubLandingPage from \"../sections/SubPageLanding\"\nimport { motion } from \"framer-motion\"\n\nconst Background = () => (\n  <div>\n    <Triangle\n      color=\"secondaryLight\"\n      height={[\"50vh\", \"20vh\"]}\n      width={[\"50vw\", \"50vw\"]}\n      invertY\n    />\n\n    <Triangle\n      color=\"primaryDark\"\n      height={[\"20vh\", \"40vh\"]}\n      width={[\"75vw\", \"70vw\"]}\n      invertX\n    />\n\n    <Triangle\n      color=\"secondary\"\n      height={[\"25vh\", \"20vh\"]}\n      width={[\"100vw\", \"100vw\"]}\n    />\n  </div>\n)\n\nconst CoverImage = styled.img`\n  width: 100%;\n  object-fit: cover;\n`\n\nconst Post = ({ fields, frontmatter }) => (\n  <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 1 }}>\n    <Link to={fields.slug}>\n      <Card m={2} pb={4}>\n        <Heading\n          style={{ fontSize: \"1.5em\", fontWeight: 500, cursor: \"pointer\" }}\n          color=\"secondaryDark\"\n          m={3}\n          mb={4}\n        >\n          {frontmatter.title}.\n        </Heading>\n        <ImageSubtitle bg=\"backgroundDark\" color=\"text\" x=\"right\" y=\"top\" round>\n          {frontmatter.platform.join(\", \")}\n        </ImageSubtitle>\n        {frontmatter.featimg && (\n          <CoverImage\n            src={frontmatter.featimg.publicURL}\n            height=\"200px\"\n            alt={frontmatter.title}\n          />\n        )}\n        <Text m={3} color=\"text\">\n          {frontmatter.description}\n        </Text>\n        <ImageSubtitle bg=\"primary\" color=\"white\" x=\"right\" y=\"bottom\" round>\n          {frontmatter.date}\n        </ImageSubtitle>\n      </Card>\n    </Link>\n  </motion.div>\n)\n\nconst getToolsArrFromQuery = tools => {\n  let result = []\n  tools.map(dat => result.push(dat.fieldValue))\n  return result\n}\n\nconst ProjectIndex = ({ data, pageContext }) => {\n  const posts = data.postsResult.edges\n  const allTools = getToolsArrFromQuery(data.toolsResult.group)\n\n  const { tools } = pageContext\n  console.log(pageContext)\n\n  let pageHeader = `Projects`\n  if (tools) {\n    pageHeader = `Built with ${tools}`\n  }\n\n  return (\n    <Layout>\n      <SEO\n        title={`All projects built using ${tools}`}\n        description={`All projects built using ${tools}.`}\n        image=\"/logo.png\"\n        pathname={`/projects/tools/${tools}`}\n        // Boolean indicating whether this is an project:\n        // project\n      />\n      <SubLandingPage name={pageHeader} scrollTo=\"projects\" loop={allTools} />\n      <Section.Container id=\"projects\" Background={Background}>\n        <CardContainer minWidth=\"300px\" maxWidth=\"90%\">\n          {posts.map(({ node }, i) => (\n            <Fade bottom key={i}>\n              <Post {...node} key={i} />\n            </Fade>\n          ))}\n        </CardContainer>\n      </Section.Container>\n      <Pagination pageContext={pageContext} />\n    </Layout>\n  )\n}\n\nexport default ProjectIndex\n\nexport const query = graphql`\n  query($tools: String!, $skip: Int!, $limit: Int!) {\n    postsResult: allMarkdownRemark(\n      filter: {\n        frontmatter: { tools: { in: [$tools] } }\n        fields: { slug: { ne: \"/projects/\" } }\n      }\n\n      sort: { fields: [frontmatter___date], order: DESC }\n      skip: $skip\n      limit: $limit\n    ) {\n      edges {\n        node {\n          excerpt\n          id\n          frontmatter {\n            platform\n            description\n            date(formatString: \"MM / YYYY\")\n            repositoryUrl\n            projectUrl\n            title\n            featimg {\n              publicURL\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n    toolsResult: allMarkdownRemark {\n      group(field: frontmatter___tools) {\n        fieldValue\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Box } from \"rebass/styled-components\"\nimport PropTypes from \"prop-types\"\nimport LinkAnimated from \"./LinkAnimated\"\nimport { Link } from \"gatsby\"\nimport FontAwesomeIcon from \"react-fontawesome\"\n\nconst RouteLink = ({\n  link,\n  selected,\n  name,\n  disableMargin = false,\n  fontSize = [2, 3],\n  icon = null,\n}) => (\n  <Link to={link}>\n    <Box ml={disableMargin ? 0 : [2, 3]} color=\"background\" fontSize={fontSize}>\n      <LinkAnimated\n        alt=\"true\"\n        selected={selected}\n        tabIndex={0}\n        onClick={() => {}}\n      >\n        {name}{\" \"}\n        {icon && (\n          <FontAwesomeIcon\n            style={{\n              transform: \"scale(var(--inner-display))\",\n              marginLeft: \"var(--inner-margin)\",\n            }}\n            name={icon}\n          />\n        )}\n      </LinkAnimated>\n    </Box>\n  </Link>\n)\n\nRouteLink.propTypes = {\n  onClick: PropTypes.func,\n  selected: PropTypes.bool,\n  name: PropTypes.string,\n}\n\nexport default RouteLink\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Pagination = ({ pageContext }) => {\n  const { previousPagePath, nextPagePath } = pageContext\n  return (\n    <nav>\n      <div>\n        {previousPagePath && <Link to={previousPagePath}>← Newer Posts</Link>}\n      </div>\n\n      <div>{nextPagePath && <Link to={nextPagePath}>Older Posts →</Link>}</div>\n    </nav>\n  )\n}\n\nexport default Pagination\n","import styled from \"styled-components\"\nimport { Card as CardRebass } from \"rebass/styled-components\"\n\nexport const CardContainer = styled.div`\n  display: grid;\n  grid-gap: 30px;\n  max-width: ${props => props.maxWidth};\n  margin: 0 auto;\n  grid-template-columns: repeat(\n    auto-fill,\n    minmax(${props => props.minWidth}, 1fr)\n  );\n  justify-items: center;\n\n  @media only screen and (max-width: 400px) {\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  }\n`\n\nexport const Card = styled(CardRebass).attrs({\n  bg: \"white\",\n  boxShadow: 0,\n})`\n  position: relative;\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.2);\n  transition: all 0.25s;\n  top: 0;\n  height: 100%;\n  border-radius: 8px;\n  &:hover {\n    box-shadow: 0 12px 16px rgba(0, 0, 0, 0.2);\n  }\n`\n\nexport default Card\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React, { Fragment } from \"react\"\nimport { Box } from \"rebass/styled-components\"\nimport { SectionLink } from \"react-scroll-section\"\nimport Section from \"../components/Section\"\nimport MouseIcon from \"../components/MouseIcon\"\nimport Triangle from \"../components/Triangle\"\nimport Fade from \"react-reveal/Fade\"\nimport _ from \"lodash\"\nimport RouteLink from \"../components/RouteLink\"\n\nconst Background = () => (\n  <div>\n    <Triangle\n      color=\"primaryDark\"\n      height={[\"15vh\", \"20vh\"]}\n      width={[\"100vw\", \"100vw\"]}\n      invertX\n    />\n\n    <Triangle\n      color=\"text\"\n      height={[\"50vh\", \"40vh\"]}\n      width={[\"70vw\", \"40vw\"]}\n      invertY\n    />\n\n    <Triangle\n      color=\"secondary\"\n      height={[\"40vh\", \"15vh\"]}\n      width={[\"100vw\", \"100vw\"]}\n      invertX\n      invertY\n    />\n  </div>\n)\n\nconst SubLandingPage = ({ name, loop = [], scrollTo }) => {\n  return (\n    <Section.Container id=\"home\" Background={Background}>\n      <Fragment>\n        <Section.Header name={name} label={name} />\n        {loop.length > 0 && (\n          <Fade top cascade>\n            <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n              {loop.map((text, i) => (\n                <Box\n                  p={2}\n                  pl={3}\n                  pr={3}\n                  m={1}\n                  key={i}\n                  style={{ backgroundColor: \"#000\" }}\n                >\n                  <RouteLink\n                    key={text}\n                    link={`/projects/tools/${_.kebabCase(text)}`}\n                    selected={false}\n                    name={text}\n                    disableMargin={true}\n                  />\n                </Box>\n              ))}\n            </div>\n          </Fade>\n        )}\n\n        <SectionLink section={scrollTo}>\n          {({ onClick }) => {\n            return <MouseIcon onClick={onClick} />\n          }}\n        </SectionLink>\n      </Fragment>\n    </Section.Container>\n  )\n}\n\nexport default SubLandingPage\n","import styled from \"styled-components\"\nimport { Box } from \"rebass/styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst BORDER_SPACING = \"20px\"\nconst BORDER_RADIUS = \"8px\"\n\nconst BORDER_PATH_MAP = {\n  \"top-left\": `polygon(0 0%, 100% 0%, calc(100% - ${BORDER_SPACING}) 100%, 0% 100%);`,\n  \"top-right\": `polygon(0 0%, 100% 0%, 100% 100%, ${BORDER_SPACING} 100%);`,\n  \"bottom-right\": `polygon(${BORDER_SPACING} 0%, 100% 0%, 100% 100%, 0% 100%);`,\n  \"bottom-left\": `polygon(0 0%, calc(100% - ${BORDER_SPACING}) 0%, 100% 100%, 0% 100%);`,\n}\n\nconst BORDER_RADIUS_MAP = {\n  \"top-left\": `${BORDER_RADIUS} 0 0 0`,\n  \"top-right\": `0 ${BORDER_RADIUS} 0 0`,\n  \"bottom-right\": `0 0 ${BORDER_RADIUS} 0`,\n  \"bottom-left\": `0 0 0 ${BORDER_RADIUS}`,\n}\n\nconst ImageSubtitle = styled(Box)`\n  position: absolute;\n  display: inline;\n  padding: 10px;\n  font-size: 14px;\n  font-weight: 600;\n  text-transform: uppercase;\n  width: max-content;\n\n  ${props => props.x}: 0;\n  ${props => props.y}: 0;\n  \n  ${props =>\n    props.x === \"left\"\n      ? `padding-right: ${BORDER_SPACING};`\n      : `padding-left: ${BORDER_SPACING};`}\n  clip-path: ${props => BORDER_PATH_MAP[`${props.y}-${props.x}`]};\n  \n  ${props =>\n    props.round &&\n    `border-radius: ${BORDER_RADIUS_MAP[`${props.y}-${props.x}`]};`}\n`\n\nImageSubtitle.propTypes = {\n  x: PropTypes.oneOf([\"left\", \"right\"]),\n  y: PropTypes.oneOf([\"top\", \"bottom\"]),\n  round: PropTypes.bool,\n}\n\nImageSubtitle.defaultProps = {\n  x: \"left\",\n  y: \"top\",\n  round: false,\n}\n\nexport default ImageSubtitle\n"],"sourceRoot":""}